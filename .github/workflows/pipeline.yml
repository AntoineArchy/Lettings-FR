name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Flake8
        run: |
          pip install flake8
          flake8 .
        continue-on-error: true

      - name: Test with pytest
        run: |
          coverage run -m pytest  -v -s
          if [ $? -ne 0 ]; then
            echo "Tests failed. Exiting..."
            exit 1
          fi

  containerize:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: ${{ needs.build_and_test.result == 'success' && github.ref == 'refs/heads/master' }}

    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: antoinetsz/letting-fr

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: antoinetsz/letting-fr:${{ github.sha }}
          labels: ${{ github.sha }}
